#ifndef _UTVECU_H
#define _UTVECU_H

#define HW_ESP_NODEMCU 0
#define HW_ARDUINO_UNO 1
#define HW_ARTEMIS_REDBOARD 2

#define HW_CURRENT_BOARD HW_ARTEMIS_REDBOARD

#define THROTTLE_ENABLE_OUTPUT 1

#if (HW_CURRENT_BOARD == HW_ESP_NODEMCU)
//NODEMCU ONLY
#define KEY_PIN D1
#define DIRECTION_PIN D2
#define PWM_OUTPUT_MOTOR_L_PIN D6
#define PWM_OUTPUT_MOTOR_R_PIN D7
#define ANALOG_INPUT_THROTTLE A0

#elif (HW_CURRENT_BOARD == HW_ARDUINO_UNO)
#define DIRECTION_PIN 2
#define KEY_PIN 13
#define PWM_OUTPUT_MOTOR_L_PIN 5
#define PWM_OUTPUT_MOTOR_R_PIN 6
#define ANALOG_INPUT_THROTTLE A0

// TODO: Setup for Sparkfun Artemis Redboard here
#elif (HW_CURRENT_BOARD == HW_ARTEMIS_REDBOARD)
#define KEY_PIN 6
#define DIRECTION_PIN 7
#define PWM_OUTPUT_MOTOR_L_PIN 3
#define PWM_OUTPUT_MOTOR_R_PIN 4
#define ANALOG_INPUT_THROTTLE A0

#endif

#define DIRECTION_FORWARD_VALUE 0
#if (HW_CURRENT_BOARD == HW_ARTEMIS_REDBOARD)
#define MIN_THROTTLE_INPUT_VALUE 520 // lowest reading from throttle
#else
#define MIN_THROTTLE_INPUT_VALUE 295 // lowest reading from throttle
#endif
#define MAX_THROTTLE_INPUT_VALUE 1024 // highest reading from throttle

#define MAX_FORWARD_THROTTLE 1027
#define MAX_REVERSE_THROTTLE 500
#define REVERSE_SPEED_SCALER 0.5

#define THROTTLE_STEPS 8 // throttle input deadband
#define THROTTLE_ZERO_DEADBAND 5 //throttle input deadband +/- ALREADY MOSTLY ACCOUTNED FOR IN MIN INPUT VALUE

// I found the PWM range needs to be a tiny big larger to hit max forward throttle
#define PWM_MAX_FORWARD_THROTTLE 2050
#define PWM_ABSOLUTE_MAX_REVERSE_THROTTLE 975
#define PWM_NEUTRAL_THROTTLE 1500
#define PWM_MAX_REV_THROTTLE PWM_ABSOLUTE_MAX_REVERSE_THROTTLE+((PWM_NEUTRAL_THROTTLE - PWM_ABSOLUTE_MAX_REVERSE_THROTTLE) * REVERSE_SPEED_SCALER)

#define USE_MANUAL_INPUT 0
#define THROTTE_USE_SQUARED_INPUTS 1


#endif // _UTVECU_H